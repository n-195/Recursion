Given a number N, let the reverse of the number be R. The task is to print the output of the Expression pow(N,R), where pow function represents N raised to power R.
Note: As answers can be very large, print the result modulo 1000000007.

Input:
The first line of the input consists of an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of a single line containing an integer N.

Output:
Corresponding to each test case, print in a new line, the output of the expression pow as described above.

Constraints:
1 <= T <= 103
1 <= N <= 1010

Example:
Input:
2
2
12

Output:
4
864354781

Explanation:
Testcase 1: The reverse of 2 is 2 and after raising power of 2 by 2 we get 4 which gives remainder as 4 by dividing 1000000007.

////////////////////////////////////////////////////////////////////////////////////////////


import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
        static long expo(long m,long n){
            long modu = 1000000007;
            if(n==0)
                return 1;
            if(n%2==0){
            
                long y=expo(m,n/2);
                return (y%modu * y%modu) % modu;
        
            }
            else
                return (m * expo(m,n-1) % modu) % modu;
        
        }
    
	public static void main (String[] args) {
	Scanner sc=new Scanner(System.in);
        Long t=sc.nextLong();
        
        while(t-->0){
            long n=0;
            Long m=sc.nextLong();
            long m1=m;
            while(m>0){
                long rem=m%10;
                n=n*10+rem;
                m=m/10;
            }
            //System.out.println(n+" ");
            System.out.println(expo(m1,n));
        }
	}
}
